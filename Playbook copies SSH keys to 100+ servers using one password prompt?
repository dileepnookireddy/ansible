 Ansible playbook that copies SSH keys to 100+ servers using one password prompt?
---------------------------------------------------------------------------------

Here’s a ready-to-run Ansible playbook that will:

✅ Prompt you once for the SSH password.
✅ Copy your SSH public key to multiple servers.
✅ Works even if you have 100+ servers.

✅ Ansible Playbook: copy_ssh_key.yml
---
- name: Distribute SSH public key to multiple servers
  hosts: all
  gather_facts: no

  vars_prompt:
    - name: ansible_password
      prompt: "Enter SSH password for remote servers"
      private: yes

  tasks:
    - name: Ensure ~/.ssh directory exists on remote
      file:
        path: ~/.ssh
        state: directory
        mode: '0700'

    - name: Install SSH public key to authorized_keys
      ansible.posix.authorized_key:
        user: "{{ ansible_user | default('root') }}"
        state: present
        key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"

✅ Inventory Example (hosts file):
[all]
192.168.1.100
192.168.1.101
192.168.1.102
server1.domain.com
server2.domain.com

✅ Run the Playbook:
ansible-playbook -i hosts copy_ssh_key.yml --ask-pass
--ask-pass is required to supply the SSH password for initial connection.

You’ll enter the password once (Ansible will reuse it per host).

✅ Optional: Speed It Up
For 100+ servers, consider:

ansible-playbook -i hosts copy_ssh_key.yml --ask-pass -f 10     #### -f 10 runs up to 10 parallel forks (adjust as needed). ###

✅ After This:
You’ll have passwordless SSH login using your key.
Ansible will no longer need --ask-pass for those hosts.

------------------------------------------------------------
Here's a complete Ansible Bootstrap Workflow to get new servers fully ready for automation after SSH keys are in place.



